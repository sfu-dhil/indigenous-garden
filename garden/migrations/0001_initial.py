# Generated by Django 5.0.3 on 2024-03-12 18:23

import django.db.models.deletion
import django_advance_thumbnail.fields
import safe_filefield.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature_type', models.CharField(choices=[('PLANT', 'Plant'), ('GARDEN_FEATURE', 'Garden Feature')], default='PLANT', max_length=255)),
                ('number', models.IntegerField(blank=True, null=True, unique=True)),
                ('audio', safe_filefield.models.SafeFileField(blank=True, help_text='Only MP3 (.mp3), WAV (.wav), or Ogg (.ogg) is allowed.', null=True, upload_to='audio/')),
                ('captions', safe_filefield.models.SafeFileField(blank=True, help_text='Only <a href="https://developer.mozilla.org/en-US/docs/Web/API/WebVTT_API" target="_blank">WebVTT (.vtt)</a> is allowed.', null=True, upload_to='captions/')),
                ('content', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'garden_feature',
            },
        ),
        migrations.CreateModel(
            name='EnglishName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('descriptor', models.CharField(blank=True, max_length=255, null=True)),
                ('audio', safe_filefield.models.SafeFileField(blank=True, help_text='Only MP3 (.mp3), WAV (.wav), or Ogg (.ogg) is allowed.', null=True, upload_to='audio/')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('feature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='english_names', to='garden.feature')),
            ],
            options={
                'db_table': 'garden_feature_english_name',
            },
        ),
        migrations.CreateModel(
            name='HalkomelemName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('descriptor', models.CharField(blank=True, max_length=255, null=True)),
                ('audio', safe_filefield.models.SafeFileField(blank=True, help_text='Only MP3 (.mp3), WAV (.wav), or Ogg (.ogg) is allowed.', null=True, upload_to='audio/')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('feature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='halkomelem_names', to='garden.feature')),
            ],
            options={
                'db_table': 'garden_feature_halkomelem_name',
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(height_field='image_height', help_text='Please use <a href="https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types" target="_blank">standard web image types</a>. PNG, JPEG, and WebP are recommended.', upload_to='images/', width_field='image_width')),
                ('image_width', models.IntegerField(blank=True, null=True)),
                ('image_height', models.IntegerField(blank=True, null=True)),
                ('thumbnail', django_advance_thumbnail.fields.AdvanceThumbnailField(blank=True, height_field='thumbnail_height', null=True, upload_to='thumbnails/', width_field='thumbnail_width')),
                ('thumbnail_width', models.IntegerField(blank=True, null=True)),
                ('thumbnail_height', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, help_text='Description of the image for accessibility.', null=True)),
                ('license', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('feature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='garden.feature')),
            ],
            options={
                'db_table': 'garden_feature_image',
            },
        ),
        migrations.CreateModel(
            name='OverheadPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('x', models.FloatField()),
                ('y', models.FloatField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('feature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='overhead_points', to='garden.feature')),
            ],
            options={
                'db_table': 'garden_overhead_point',
            },
        ),
        migrations.CreateModel(
            name='PanoramaPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('yaw', models.FloatField()),
                ('pitch', models.FloatField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('feature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='panorama_points', to='garden.feature')),
            ],
            options={
                'db_table': 'garden_panorama_point',
            },
        ),
        migrations.CreateModel(
            name='SquamishName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('descriptor', models.CharField(blank=True, max_length=255, null=True)),
                ('audio', safe_filefield.models.SafeFileField(blank=True, help_text='Only MP3 (.mp3), WAV (.wav), or Ogg (.ogg) is allowed.', null=True, upload_to='audio/')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('feature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='squamish_names', to='garden.feature')),
            ],
            options={
                'db_table': 'garden_feature_squamish_name',
            },
        ),
        migrations.CreateModel(
            name='WesternScientificName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('descriptor', models.CharField(blank=True, max_length=255, null=True)),
                ('audio', safe_filefield.models.SafeFileField(blank=True, help_text='Only MP3 (.mp3), WAV (.wav), or Ogg (.ogg) is allowed.', null=True, upload_to='audio/')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('feature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='western_scientific_names', to='garden.feature')),
            ],
            options={
                'db_table': 'garden_feature_western_scientific_name',
            },
        ),
    ]
